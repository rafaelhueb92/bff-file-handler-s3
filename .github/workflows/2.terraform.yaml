name: Deploy Terraform Infrastructure

on:
  workflow_run:
    workflows: ["Build"]       
    types:
      - completed

jobs:
  terraform:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    
    env:
      AWS_REGION: us-east-1
      TF_WORKSPACE: development
    
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Parse config.yaml and Set Environment Variables
        run: bash ./bash/backend-create.sh

      - name: Clear AWS Credentials Cache
        run: rm -rf ~/.aws/cli/cache

      - name: Configure Terraform backend (state.tf)
        run: bash ./../bash/backend-create.sh
        working-directory: ./terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.0
          terraform_wrapper: false
          
      - name: Terraform Init
        run: terraform init -reconfigure
        working-directory: ./terraform

      - name: Check Destroy Flag
        id: check-destroy
        run: bash ./../bash/check-destroy.sh
        working-directory: ./terraform

      - name: Terraform Plan
        id: terraform-plan
        run: terraform plan -out=tfplan
        working-directory: ./terraform

      - name: Destroy Resources (if destroy flag is true)
        if: env.DESTROY == 'true'
        run: |
          bash ./../bash/delete-images-ecr-repo.sh
          terraform destroy -auto-approve
        working-directory: ./terraform
        continue-on-error: true

      - name: Apply Changes 
        if: env.DESTROY == 'false'
        run: terraform apply -auto-approve
        working-directory: ./terraform
        env:
         TF_VAR_ecr_image_tag: ${{ env.IMAGE_TAG }}
         TF_VAR_app_user: ${{ secrets.APP_USER }}
         TF_VAR_app_password: ${{ secrets.APP_PASSWORD }}
      
      ## IF FAILS
      
      - name: Refresh State to Get Applied Resources (failure)
        if: failure()  
        run: terraform apply -refresh-only -auto-approve
        working-directory: ./terraform

      - name: List Changed Resources (failure)
        if: failure() 
        id: list-resources
        run: bash ./../bash/list-changed-resources.sh
        working-directory: ./terraform

      - name: Destroy Only Changed Resources (failure)
        if: failure() 
        run: bash ./../bash/destroy-changed-resources.sh
        working-directory: ./terraform