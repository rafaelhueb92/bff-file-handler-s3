FROM node:18-alpine AS dependencies
WORKDIR /usr/src/app
COPY package*.json ./
RUN npm ci --only=production

FROM node:18-alpine AS builder
WORKDIR /usr/src/app
COPY --from=dependencies /usr/src/app/node_modules ./node_modules
COPY . .
RUN npm ci && npm run build

FROM node:18-alpine AS production
WORKDIR /usr/src/app

RUN apk add --no-cache \
    curl \
    tini \
    && rm -rf /var/cache/apk/*

RUN addgroup -g 1001 -S nodejs \
    && adduser -S nestjs -u 1001 \
    && chown -R nestjs:nodejs /usr/src/app

COPY --from=builder --chown=nestjs:nodejs /usr/src/app/dist ./dist
COPY --from=builder --chown=nestjs:nodejs /usr/src/app/node_modules ./node_modules
COPY --chown=nestjs:nodejs package*.json ./

ENV NODE_ENV=production
ENV PORT=3000

HEALTHCHECK --interval=30s --timeout=3s --start-period=30s \
    CMD curl -f http://localhost:${PORT}/health || exit 1

USER nestjs

ENTRYPOINT ["/sbin/tini", "--"]

CMD ["node", "dist/main"]

EXPOSE ${PORT}